plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

javafx {
    version = "17.0.2"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

application {
    mainClass = 'com.example.titanium.gui.TitaniumGui'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':patcher')
    implementation project(':customizer')
    implementation project(':performance')
    implementation 'org.yaml:snakeyaml:2.0'

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Disable the standard jar task to avoid conflicts with shadowJar
tasks.named('jar') {
    enabled = false
}

// Ensure the build task depends on the shadowJar task
tasks.named('build') {
    dependsOn tasks.named('shadowJar')
}

shadowJar {
    archiveClassifier.set('')
    // Required for some dependencies that have service descriptors
    mergeServiceFiles()
}

// Tell the distribution tasks to use the shadow JAR
tasks.named('startScripts') {
    classpath = files(tasks.shadowJar.archiveFile)
}
